name: Build Custom Oplus ROM

on:
  workflow_dispatch:
    inputs:
      ROM_URL:
        description: 'Link to OTA ROM (payload.bin)'
        required: true
        type: string
env:
  TZ: Asia/Ho_Chi_Minh

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 720
    steps:
      - name: Clean 1
        run: |
            docker rmi `docker images -q` || true
            sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/sudo apt/sources.list.d || true
            sudo apt -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* || true
            sudo apt -y autoremove --purge || true
            sudo apt -y autoclean || true
            sudo apt clean || true
      
      - name: Clean 2
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 1024
          swap-size-mb: 4096
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
      
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: 'proplayer1131/new-dump'
          token: ${{ secrets.ACTION_TOKEN }}

      - name: Install System & Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            aria2 rclone zip unzip p7zip-full python3-pip \
            liblz4-tool zstd xmlstarlet bc file git \
            build-essential autoconf libtool pkg-config uuid-dev liblz4-dev libselinux1-dev \
            libsparse-dev zlib1g-dev simg2img


      - name: Install Python Tools
        run: |
          pip3 install protobuf==3.20.3
          pip3 install git+https://github.com/5ec1cff/payload-dumper

      - name: Compile and Prepare Build Tools
        run: |
          chmod +x setup_tools.sh
          ./setup_tools.sh

      - name: Run ROM Build Process
        env:
          RCLONE_CONF: ${{ secrets.RCLONE_CONF }}
        run: |
          # Grant execution permissions to all your scripts
          chmod +x build.sh scripts/*.sh
          
          # Start the main script, passing in the ROM URL you provided
          ./build.sh "${{ github.event.inputs.ROM_URL }}"