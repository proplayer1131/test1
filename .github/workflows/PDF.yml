name: "PDF Merger: Download from URL and Upload"

on:
  workflow_dispatch:
    inputs:
      share_url:
        description: 'Public URL (Google Drive or OneDrive/SharePoint)'
        required: true
        type: string
      
      output_filename:
        description: 'Output Name (Optional - Default is MergedDocument.pdf)'
        required: false 
        type: string
        default: 'MergedDocument.pdf' 

jobs:
  build-and-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Install Rclone
        run: |
          sudo apt-get update
          sudo apt-get install -y rclone

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' 

      - name: Install Python PDF Library
        run: pip install pypdf

      - name: Checkout Repository Code
        uses: actions/checkout@v4
        with:
          repository: 'proplayer1131/PDF-MERGED'
          token: ${{ secrets.ACTION_TOKEN }}

      - name: Configure Rclone
        env:
          RCLONE_CONFIG_BASE64: ${{ secrets.RCLONE_CONFIG_BASE64 }}
        run: |
          echo "Configuring Rclone..."
          mkdir -p ~/.config/rclone
          echo "$RCLONE_CONFIG_BASE64" | base64 --decode > ~/.config/rclone/rclone.conf
          chmod 600 ~/.config/rclone/rclone.conf
          echo "Rclone configured successfully."

      - name: Download PDF Files from Public URL (Auto-Detect)
        run: |
          mkdir -p ./input_pdfs
          echo "Downloading files from URL..."
          URL="${{ github.event.inputs.share_url }}"

          if [[ "$URL" == *"drive.google.com"* ]]; then
            echo "Google Drive link detected."
            rclone copy "drive(url='$URL',type=drive):" ./input_pdfs --include "*.pdf" --progress --drive-acknowledge-abuse
          
          elif [[ "$URL" == *"sharepoint.com"* || "$URL" == *"1drv.ms"* ]]; then
            echo "OneDrive/SharePoint link detected."
            rclone copy "onedrive(link='$URL',type=onedrive):" ./input_pdfs --include "*.pdf" --progress
          
          else
            echo "ERROR: Unknown link type."
            exit 1
          fi
          
          echo "Download complete."
          ls -l ./input_pdfs

      - name: Set Output Filename
        run: |
          # Nó sẽ lấy tên bạn nhập, hoặc lấy 'MergedDocument.pdf' nếu bạn để trống
          NAME="${{ github.event.inputs.output_filename }}"
          if [[ "$NAME" != *.pdf ]]; then
            NAME="${NAME}.pdf"
          fi
          echo "Output filename set to: $NAME"
          echo "OUTPUT_NAME=$NAME" >> $GITHUB_ENV

      - name: Run Python Script to Merge PDFs
        run: |
          python merge_pdfs.py ./input_pdfs "${{ env.OUTPUT_NAME }}"

      - name: Upload Merged PDF to Cloud Drive (Auto-Rename)
        run: |
          echo "Uploading file ${{ env.OUTPUT_NAME }} to 1drive:Merged_Book"
          rclone move "${{ env.OUTPUT_NAME }}" "1drive:Merged_Book" --auto-rename --progress
          echo "Upload complete."

      - name: Generate and Mask Public Link
        id: get_link
        run: |
          echo "Attempting to create public link..."
          LINK=$(rclone link "1drive:Merged_Book/${{ env.OUTPUT_NAME }}" || true)
          
          if [ -n "$LINK" ]; then
            echo "Link generated. Masking from logs..."
            echo "::add-mask::$LINK"
            echo "DOWNLOAD_LINK=$LINK" >> $GITHUB_ENV
          else
            echo "Could not generate link. Proceeding without it."
            echo "DOWNLOAD_LINK=Không thể tạo link tự động." >> $GITHUB_ENV
          fi

      - name: Send notification to Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown 
          message: |
            ✅ **GỘP FILE THÀNH CÔNG!**

            **Tên sách:** `${{ env.OUTPUT_NAME }}`
            **(Nếu trùng tên, file có thể đã được tự động đổi tên thành `(1)`, `(2)`...)**

            **Nguồn:** `(Public URL)`
            **Đích:** `1drive:Merged_Book`

            [Nhấn để tải về 🚀](${{ env.DOWNLOAD_LINK }})